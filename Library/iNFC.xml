<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4INFC</name>
        <shortname>NFC</shortname>
        <event>TagDetected (Messages As List)</event>
        <event>SessionClosed</event>
        <method>
            <name DesignerName="Initialize">Initialize::</name>
            <returntype>void</returntype>
            <parameter>
                <name>bi</name>
                <type>B4I*</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>NSString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Scan">Scan:</name>
            <comment>Starts a scan session. The SessionClosed event will be raised when the session is closed.
Message - The dialog message.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Message</name>
                <type>NSString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="StopScan">StopScan</name>
            <comment>Stops scanning.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Supported</name>
            <comment>Returns true if NFC is supported.</comment>
            <returntype>BOOL</returntype>
        </property>
    </class>
    <class>
        <name>B4INdefRecord</name>
        <shortname>NdefRecord</shortname>
        <objectwrapper>NFCNDEFPayload*</objectwrapper>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="GetPayload">GetPayload</name>
            <comment>Returns the record payload.</comment>
            <returntype>unsigned char[]</returntype>
        </method>
        <method>
            <name DesignerName="GetKnownType">GetKnownType</name>
            <comment>Returns the known type field.</comment>
            <returntype>unsigned char[]</returntype>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>FORMAT_Empty</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>FORMAT_NFCWellKnown</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>FORMAT_Media</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>FORMAT_AbsoluteURI</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>FORMAT_NFCExternal</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>FORMAT_Unknown</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>FORMAT_Unchanged</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>RecordType</name>
            <comment>Returns the record type. One of the FORMAT constants.</comment>
            <returntype>int</returntype>
        </property>
    </class>
    <dependsOn>CoreNFC.framework</dependsOn>
</root>
