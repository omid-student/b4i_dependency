<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>iFirebaseAuth</name>
        <shortname>FirebaseAuth</shortname>
        <event>SignedIn (User As FirebaseUser)</event>
        <event>TokenAvailable (User As FirebaseUser, Success As Boolean, TokenId As String)</event>
        <method>
            <name DesignerName="Initialize">Initialize::</name>
            <comment>Initializes the object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bi</name>
                <type>B4I*</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>NSString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="OpenUrl">OpenUrl:::</name>
            <comment>Should be called from Application_OpenURL. Returns True if the url was handled.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>Url</name>
                <type>NSString*</type>
            </parameter>
            <parameter>
                <name>Data</name>
                <type>NSObject*</type>
            </parameter>
            <parameter>
                <name>SourceApplication</name>
                <type>NSString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SignInWithGoogle">SignInWithGoogle:</name>
            <comment>Signs in using Google.
Page - The current page.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Page</name>
                <type>UIViewController*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SignOutFromGoogle">SignOutFromGoogle</name>
            <comment>Signs out from Firebase and Google.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name DesignerName="GetUserTokenId">GetUserTokenId::</name>
            <comment>Retrieves the token id. This token can be sent to your backend server. The server can use it to verify the user.
The TokenAvailable event will be raised.
User - The signed in user.
ForceRefresh - Whether to force Firebase to refresh the token.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>User</name>
                <type>B4IFirebaseUser*</type>
            </parameter>
            <parameter>
                <name>ForceRefresh</name>
                <type>BOOL</type>
            </parameter>
        </method>
        <property>
            <name>CurrentUser</name>
            <returntype>B4IFirebaseUser*</returntype>
        </property>
    </class>
    <class>
        <name>B4IFirebaseUser</name>
        <shortname>FirebaseUser</shortname>
        <objectwrapper>FIRUser*</objectwrapper>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>Email</name>
            <returntype>NSString*</returntype>
        </property>
        <property>
            <name>DisplayName</name>
            <returntype>NSString*</returntype>
        </property>
        <property>
            <name>PhotoUrl</name>
            <returntype>NSString*</returntype>
        </property>
        <property>
            <name>Uid</name>
            <returntype>NSString*</returntype>
        </property>
    </class>
    <version>2.5</version>
    <dependsOn>AddressBook.framework</dependsOn>
    <dependsOn>SystemConfiguration.framework</dependsOn>
    <dependsOn>SafariServices.framework</dependsOn>
    <dependsOn>GoogleSignIn.framework.3</dependsOn>
    <dependsOn>GTMSessionFetcher.framework.3</dependsOn>
    <dependsOn>FirebaseAuth.framework.3</dependsOn>
    <dependsOn>FirebaseAuth.framework.3</dependsOn>
    <dependsOn>AppAuth.framework.3</dependsOn>
    <dependsOn>GTMAppAuth.framework.3</dependsOn>
</root>
