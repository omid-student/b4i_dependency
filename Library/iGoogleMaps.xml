<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<root>
    <doclet-version-NOT-library-version>1.00</doclet-version-NOT-library-version>
    <class>
        <name>B4IGoogleMap</name>
        <shortname>GoogleMap</shortname>
        <objectwrapper>GMSMapView*</objectwrapper>
        <comment>GoogleMap is a View that shows an interactive map.</comment>
        <event>CameraChange (Position As CameraPosition)</event>
        <event>Click (Point As LatLng)</event>
        <event>MarkerClick (SelectedMarker As Marker) As Boolean 'Return True to consume the click</event>
        <event>MarkerDragged (SelectedMarker As Marker)</event>
        <event>InfoWindowClick (SelectedMarker As Marker)</event>
        <event>Click</event>
        <event>LongClick</event>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="CalcRelativeKeyboardHeight">CalcRelativeKeyboardHeight:</name>
            <comment>Calculates the keyboard top point relative to the current view.</comment>
            <returntype>double</returntype>
            <parameter>
                <name>KeyboardHeight</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetColorAnimated">SetColorAnimated::</name>
            <comment>Animates the view's background color.
DurationMS - Animation duration measured in milliseconds.
BackgroundColor - The new background color.
Note that Labels do not support this type of animation.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DurationMS</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>BackgroundColor</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetAlphaAnimated">SetAlphaAnimated::</name>
            <comment>Animates the view's alpha level.
DurationMS - Animation duration measured in milliseconds.
Alpha - The new alpha level (0 - transparent, 1 - fully opaque).</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DurationMS</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Alpha</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetLayoutAnimated">SetLayoutAnimated::::::</name>
            <comment>Animates the view's layout.
DurationMS - Animation duration measured in milliseconds. Set to 0 to change the layout immediately.
DampingRatio - If smaller than 1 then a spring effect will be applied to the animation. The minimum value should be 0.1.
Set to 1 for no spring effect.
Left, Top, Width and Height - The new layout.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>DurationMS</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>DampingRatio</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Left</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Top</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Height</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetBorder">SetBorder:::</name>
            <comment>Sets the view's border width, color and corner radius.
Note that the corner radius should be 0 if the view should show a shadow as well.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Width</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>CornerRadius</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SetShadow">SetShadow:::::</name>
            <comment>Adds a shadow to to the view. The border corners radius should be set to 0 when adding shadows.
Colors - The shadow color.
OffsetX, OffsetY - The horizontal and vertical offsets.
Opacity - Sets the shadow opacity: 0 - transparent, 1 - opaque.
StaticRect - (optimization parameter) Set this parameter to True if the view's size is constant.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>OffsetX</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>OffsetY</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Opacity</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>StaticRect</name>
                <type>BOOL</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="SizeToFit">SizeToFit</name>
            <comment>Resizes the view to make it fit its content.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name DesignerName="RequestFocus">RequestFocus</name>
            <comment>Tries to set the focus on the current view. Returns True if the focus was set. Most views are not focusable.
When a text view is focused the keyboard is shown.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="ResignFocus">ResignFocus</name>
            <comment>Removes the focus from the current view. Removing the focus from a text view will hide the keyboard.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="RemoveViewFromParent">RemoveViewFromParent</name>
            <comment>Removes the view from its parent (same as B4A View.RemoveView method).</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name DesignerName="BringToFront">BringToFront</name>
            <comment>Brings the view to front.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name DesignerName="SendToBack">SendToBack</name>
            <comment>Sends the view to the back.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name DesignerName="SetParallaxEffect">SetParallaxEffect::</name>
            <comment>Adds a parallax effect to the view. The view will slightly move when the device is tilted.
Vertical - Vertical offset. Can be a positive or negative value.
Horizontal - Horizontal offset. Can be a positive or negative value.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Vertical</name>
                <type>int</type>
            </parameter>
            <parameter>
                <name>Horizontal</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Initialize">Initialize:::</name>
            <comment>Initializes the map. ApiKey must match the key in Google developers console.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>bi</name>
                <type>B4I*</type>
            </parameter>
            <parameter>
                <name>EventName</name>
                <type>NSString*</type>
            </parameter>
            <parameter>
                <name>ApiKey</name>
                <type>NSString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="GetOpenSourceLicenseInfo">GetOpenSourceLicenseInfo</name>
            <comment>Returns the requires attribution text.</comment>
            <returntype>NSString*</returntype>
        </method>
        <method>
            <name DesignerName="AnimateCamera">AnimateCamera:</name>
            <comment>Moves the camera to the new position.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NewPosition</name>
                <type>B4ICameraPosition*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="MoveCamera">MoveCamera:</name>
            <comment>Immediately moves the camera to the new position.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>NewPosition</name>
                <type>B4ICameraPosition*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="AddMarker">AddMarker:::</name>
            <comment>Adds a marker to the map and returns the new Marker object.</comment>
            <returntype>B4IMarker*</returntype>
            <parameter>
                <name>Lat</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Lon</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>NSString*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="AddMarker2">AddMarker2::::</name>
            <comment>Adds a marker to the map and returns the new Marker object.</comment>
            <returntype>B4IMarker*</returntype>
            <parameter>
                <name>Lat</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Lon</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>NSString*</type>
            </parameter>
            <parameter>
                <name>Color</name>
                <type>int</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="AddMarker3">AddMarker3::::</name>
            <comment>Adds a marker to the map and returns the new Marker object.</comment>
            <returntype>B4IMarker*</returntype>
            <parameter>
                <name>Lat</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Lon</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Title</name>
                <type>NSString*</type>
            </parameter>
            <parameter>
                <name>Image</name>
                <type>UIImage*</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Clear">Clear</name>
            <comment>Clears all overlay objects.</comment>
            <returntype>void</returntype>
        </method>
        <method>
            <name DesignerName="GetUiSettings">GetUiSettings</name>
            <comment>Returns the MapUISettings object.</comment>
            <returntype>B4IUIMapSettings*</returntype>
        </method>
        <method>
            <name DesignerName="AddPolyline">AddPolyline</name>
            <comment>Adds an empty Polyline to the map.</comment>
            <returntype>B4IPolyline*</returntype>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>Left</name>
            <comment>Gets or sets the view's left position.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>Top</name>
            <comment>Gets or sets the view's top position.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>Width</name>
            <comment>Gets or sets the view's width.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>Height</name>
            <comment>Gets or sets the view's height.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>Color</name>
            <comment>Gets or sets the view's background color.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>p</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>Alpha</name>
            <comment>Gets or sets the view's alpha level. 0 - transparent, 1 (default) - fully opaque.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>TintColor</name>
            <comment>Gets or sets the view's tint color. Some views use this color to change their appearance.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>p</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>Visible</name>
            <comment>Gets or sets whether the view is visible.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>IsFocused</name>
            <comment>Returns true if the view is focused.</comment>
            <returntype>BOOL</returntype>
        </property>
        <property>
            <name>UserInteractionEnabled</name>
            <comment>Gets or sets whether the user can interact with this view. True by default.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>Parent</name>
            <comment>Returns the views parent. The returned view can be uninitialized (if there is no parent).</comment>
            <returntype>B4IViewWrapper*</returntype>
        </property>
        <property>
            <name>MAP_TYPE_NONE</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>MAP_TYPE_NORMAL</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>MAP_TYPE_SATELLITE</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>MAP_TYPE_TERRAIN</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>MAP_TYPE_HYBRID</name>
            <returntype>int</returntype>
        </property>
        <property>
            <name>CameraPosition</name>
            <comment>Gets the current camera position.</comment>
            <returntype>B4ICameraPosition*</returntype>
        </property>
        <property>
            <name>MapType</name>
            <comment>Gets or sets the map type. The value should be one of the MAP_TYPE constants.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>p</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>MyLocationEnabled</name>
            <comment>Gets or sets whether the user location will be displayed.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>TrafficEnabled</name>
            <comment>Gets or sets whether traffic data will be displayed (if it is available).</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>MyLocation</name>
            <comment>Gets the current user location. Returns an uninitialized LatLng object if location is not available.</comment>
            <returntype>B4ILatLng*</returntype>
        </property>
    </class>
    <class>
        <name>B4ICameraPosition</name>
        <shortname>CameraPosition</shortname>
        <objectwrapper>GMSCameraPosition*</objectwrapper>
        <comment>The map view is modeled as a camera looking down on a flat plane.</comment>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="Initialize">Initialize:::</name>
            <comment>Initializes the CameraPosition object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Lat</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Lon</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Zoom</name>
                <type>float</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="Initialize2">Initialize2:::::</name>
            <comment>Initializes the CameraPosition object.</comment>
            <returntype>void</returntype>
            <parameter>
                <name>Lat</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Lon</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Zoom</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Bearing</name>
                <type>float</type>
            </parameter>
            <parameter>
                <name>Tilt</name>
                <type>float</type>
            </parameter>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>Bearing</name>
            <comment>Returns the direction the camera points at.</comment>
            <returntype>double</returntype>
        </property>
        <property>
            <name>Zoom</name>
            <comment>Returns the zoom level.</comment>
            <returntype>float</returntype>
        </property>
        <property>
            <name>Tilt</name>
            <comment>Returns the tilt level.</comment>
            <returntype>double</returntype>
        </property>
        <property>
            <name>Target</name>
            <comment>Returns the location that the camera is pointing at.</comment>
            <returntype>B4ILatLng*</returntype>
        </property>
    </class>
    <class>
        <name>B4ILatLng</name>
        <shortname>LatLng</shortname>
        <method>
            <name DesignerName="Initialize">Initialize::</name>
            <returntype>void</returntype>
            <parameter>
                <name>Latitude</name>
                <type>double</type>
            </parameter>
            <parameter>
                <name>Longitude</name>
                <type>double</type>
            </parameter>
        </method>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <returntype>BOOL</returntype>
        </method>
        <property>
            <name>Latitude</name>
            <returntype>double</returntype>
        </property>
        <property>
            <name>Longitude</name>
            <returntype>double</returntype>
        </property>
    </class>
    <class>
        <name>B4IMarker</name>
        <shortname>Marker</shortname>
        <objectwrapper>GMSMarker*</objectwrapper>
        <comment>A marker icon placed on the map. Call GoogleMap.AddMarker to add a marker.</comment>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="Remove">Remove</name>
            <comment>Removes the marker from the map.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>Position</name>
            <comment>Gets or sets the marker position.</comment>
            <returntype>B4ILatLng*</returntype>
            <parameter>
                <name>p</name>
                <type>B4ILatLng*</type>
            </parameter>
        </property>
        <property>
            <name>Draggable</name>
            <comment>Gets or sets whether the user can drag the marker. The default value is false.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>Opacity</name>
            <comment>Gets or sets the opacity (0 - transparent, 1 - fully opaque).</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>Snippet</name>
            <comment>Gets or sets the snippet text.</comment>
            <returntype>NSString*</returntype>
            <parameter>
                <name>p</name>
                <type>NSString*</type>
            </parameter>
        </property>
        <property>
            <name>Title</name>
            <comment>Gets or sets the title.</comment>
            <returntype>NSString*</returntype>
            <parameter>
                <name>p</name>
                <type>NSString*</type>
            </parameter>
        </property>
    </class>
    <class>
        <name>B4IUIMapSettings</name>
        <shortname>MapUiSettings</shortname>
        <objectwrapper>GMSUISettings*</objectwrapper>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>CompassEnabled</name>
            <comment>Gets or sets whether the compass button is visible.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>MyLocationButtonEnabled</name>
            <comment>Gets or sets whether the MyLocation button is visible.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>RotateGesturesEnabled</name>
            <comment>Gets or sets whether rotation gestures are enabled.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>ScrollGesturesEnabled</name>
            <comment>Gets or sets whether scrolling gestures are enabled.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>ZoomGesturesEnabled</name>
            <comment>Gets or sets whether zoom gestures are enabled.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>AllGesturesEnabled</name>
            <comment>(write only) Enabled or disables all the gestures.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>TiltGesturesEnabled</name>
            <comment>Gets or sets whether tilt gestures are enabled.</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
    </class>
    <class>
        <name>B4IPolyline</name>
        <shortname>Polyline</shortname>
        <objectwrapper>GMSPolyline*</objectwrapper>
        <comment>A series of lines added to the map.
Call GoogleMap.AddPolyline to create this object.</comment>
        <method>
            <name DesignerName="IsInitialized">IsInitialized</name>
            <comment>Tests whether this object was initialized.</comment>
            <returntype>BOOL</returntype>
        </method>
        <method>
            <name DesignerName="Remove">Remove</name>
            <comment>Removes the Polyline from the map.</comment>
            <returntype>void</returntype>
        </method>
        <property>
            <name>Tag</name>
            <comment>Gets or sets the Tag object. This is a placeholder for any object you like to tie to this object.</comment>
            <returntype>NSObject*</returntype>
            <parameter>
                <name>p</name>
                <type>NSObject*</type>
            </parameter>
        </property>
        <property>
            <name>Points</name>
            <comment>Gets or sets the list of points. Each item in the list should be a LatLng object.</comment>
            <returntype>B4IList*</returntype>
            <parameter>
                <name>p</name>
                <type>B4IList*</type>
            </parameter>
        </property>
        <property>
            <name>Width</name>
            <comment>Gets or sets the line stroke width.</comment>
            <returntype>float</returntype>
            <parameter>
                <name>p</name>
                <type>float</type>
            </parameter>
        </property>
        <property>
            <name>ZIndex</name>
            <comment>Gets or sets the line Z index.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>p</name>
                <type>int</type>
            </parameter>
        </property>
        <property>
            <name>Geodesic</name>
            <comment>Gets or sets whether the line segments are geodesic lines (shortest path on the earth surface) or straight lines (default).</comment>
            <returntype>BOOL</returntype>
            <parameter>
                <name>p</name>
                <type>BOOL</type>
            </parameter>
        </property>
        <property>
            <name>Color</name>
            <comment>Gets or sets the lines color.</comment>
            <returntype>int</returntype>
            <parameter>
                <name>p</name>
                <type>int</type>
            </parameter>
        </property>
    </class>
    <version>1.3</version>
    <dependsOn>AVFoundation.framework</dependsOn>
    <dependsOn>CoreData.framework</dependsOn>
    <dependsOn>CoreLocation.framework</dependsOn>
    <dependsOn>CoreBluetooth.framework</dependsOn>
    <dependsOn>Accelerate.framework</dependsOn>
    <dependsOn>CoreText.framework</dependsOn>
    <dependsOn>GLKit.framework</dependsOn>
    <dependsOn>ImageIO.framework</dependsOn>
    <dependsOn>libc++.dylib</dependsOn>
    <dependsOn>libicucore.dylib</dependsOn>
    <dependsOn>libz.dylib</dependsOn>
    <dependsOn>OpenGLES.framework</dependsOn>
    <dependsOn>QuartzCore.framework</dependsOn>
    <dependsOn>SystemConfiguration.framework</dependsOn>
    <dependsOn>GoogleMaps.framework.3</dependsOn>
    <dependsOn>GoogleMapsBase.framework.3</dependsOn>
    <dependsOn>GoogleMapsCore.framework.3</dependsOn>
</root>
